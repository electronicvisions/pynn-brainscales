#!/usr/bin/env python

import os
from os.path import join
from waflib.extras.test_base import summary
from waflib.extras.symwaf2ic import get_toplevel_path


def depends(ctx):
    ctx('haldls')
    ctx('code-format')
    ctx('logger')


def options(opt):
    opt.load('pytest')
    opt.load('pylint')
    opt.load('pycodestyle')


def configure(cfg):
    cfg.load('python')
    cfg.check_python_version()
    cfg.load('pytest')
    cfg.load('pylint')
    cfg.load('pycodestyle')


def build(bld):
    bld.env.DLSvx_HARDWARE_AVAILABLE = "cube" == os.environ.get("SLURM_JOB_PARTITION")
    bld(name = 'pynn_brainscales2',
        features = 'use py pylint pycodestyle',
        source = bld.path.ant_glob('pynn_brainscales/**/*.py'),
        relative_trick = True,
        use = ['dlens_vx_v2', 'pylogging'],
        install_path = '${PREFIX}/lib',
        pylint_config = join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config = join(get_toplevel_path(), "code-format", "pycodestyle"),
    )

    bld(name = 'pynn_brainscales2_examples',
        features = 'use py pylint pycodestyle',
        source = bld.path.ant_glob('examples/*.py'),
        relative_trick = True,
        use = ['pynn_brainscales2'],
        install_from = 'examples',
        install_path = '${PREFIX}/bin',
        pylint_config = join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config = join(get_toplevel_path(), "code-format", "pycodestyle"),
    )

    bld(name = 'pynn_brainscales2_swtest',
        tests = bld.path.ant_glob('test/sw/*.py'),
        features = 'use pytest pylint pycodestyle',
        use = ['pynn_brainscales2'],
        install_path = '${PREFIX}/bin',
        pylint_config = join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config = join(get_toplevel_path(), "code-format", "pycodestyle"),
    )

    bld(name = 'pynn_brainscales2_hwtest',
        tests = bld.path.ant_glob('test/hw/*.py'),
        test_timeout = 360,
        features = 'use pytest pylint pycodestyle',
        use = ['pynn_brainscales2_examples'],
        install_path = '${PREFIX}/bin',
        pylint_config = join(get_toplevel_path(), "code-format", "pylintrc"),
        pycodestyle_config = join(get_toplevel_path(), "code-format", "pycodestyle"),
        skip_run = not bld.env.DLSvx_HARDWARE_AVAILABLE
    )

    bld.add_post_fun(summary)

@Library("jenlib") _

try {

	Map<String, Object> commonPipelineOptions = [
			projects: ["pynn-brainscales"],
			notificationChannel: "#jenkins-trashbin",  // success is checked globally
			moduleOptions: [modules: ["ppu-toolchain"]],
	]

	Map<String, Object> pipelineDeploymentOptions = [
		container              : [app: "dls"],
		configureInstallOptions: "--build-profile=release_with_debug"
	] << commonPipelineOptions

	Map<String, Object> pipelineNoDeploymentOptions = [
		// upstream PyNN depends on h5py...
		container              : [app: "dls"],
		configureInstallOptions: "--build-profile=ci",
		testSlurmResource: getHxTestResource(3),
		preTestHook: { configureHxCubeBitfile() },
		testOptions: "--test-execall -j1"
	] << commonPipelineOptions

	boolean deploy = env.GERRIT_EVENT_TYPE == "change-merged"

	Map<String, Object> pipelineOptions = deploy ? pipelineDeploymentOptions : pipelineNoDeploymentOptions

	withCcache() {
		wafDefaultPipeline(pipelineOptions)
	}

	// Archive plots from hardware tests
	stage(name: "Archive Test Plots") {
		runOnSlave(label: "frontend") {
			archiveArtifacts(artifacts: 'pynn-brainscales/brainscales2/*.pdf',
			                 allowEmptyArchive: true)
		}
	}

	conditionalStage(name: "Module Deployment", skip: !deploy) {
		runOnSlave(label: "frontend") {
			inSingularity(app: "dls") {
				deployModule([name: "pynn-brainscales", source: "bin/ lib/ lib64/ include/ share/ repos_log.txt"])
			}
		}
	}
} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#dls-software")
	throw t
}

if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#dls-software")
}
